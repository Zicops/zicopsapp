$primary: #6bcfcf;
// $secondary: #24575d;
$secondary: #292f2f;

$accent: #142c2c;
$bgContent: #081111;

$white: #ffffff;
$secondaryWhite: #484848;

$black: #040404;
$secondaryBlack: #737373;
$tertiaryBlack: #121212;

$header: #b5b5b5;

$darkOne: #1a1a1a;
$darkTwo: #202222;
$darkThree: #868f8f;

$bgTile: #1a1d21;
$bgBody: #acacac;
$bgFooter: #001111;
// $bgHeader: #222529;
$bgHeader: #0b0c0d;

$headerHeight: 70px;
$footerHeight: 100px;

// function for generating transparent color from base colors
@function getLowOpacityColor($colorInHex, $opacityInHex) {
  @return rgba($colorInHex, $opacityInHex);
}

// mixins
@mixin cut-corners ($left-top, $right-top: 0px, $right-bottom: 0px, $left-bottom: 0px) {
  clip-path: polygon($left-top 0%, calc(100% - #{$right-top}) 0%, 100% $right-top, 100% calc(100% - #{$right-bottom}), calc(100% - #{$right-bottom}) 100%, $left-bottom 100%, 0% calc(100% - #{$left-bottom}), 0% $left-top);
}

// to make background semi transparent
@mixin transparentBackground($bgColor: $bgContent, $opacity: 0.5) {
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background: $bgColor;

    z-index: -1;

    opacity: $opacity;
  }
}

// input states
@mixin inputStylesFor($state: 'hasValue') {
  @if $state == 'hasValue' {
    color: $white;
    border: 2px solid $primary;
  }

  @if $state == 'disabled' {
    border: 2px solid $darkThree;
  }

  @if $state == 'focus' {
    border: 2px solid $primary;
    box-shadow: 0px 0px 10px 0px $primary;
    outline: 0;
    color: $white;
  }
}
