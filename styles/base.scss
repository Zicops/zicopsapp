$primary: #6bcfcf;
// $secondary: #24575d;
$secondary: #292f2f;

$accent: #142c2c;
$bgContent: #081111;
$error: #cf3e3e;
$white: #ffffff;
$secondaryWhite: #484848;
$tertiaryWhite: #30323f;
$neutralWhite: #c4c4c4;

$black: #040404;
$secondaryBlack: #737373;
$tertiaryBlack: #121212;

$header: #b5b5b5;

$darkOne: #1a1a1a;
$darkTwo: #202222;
$darkThree: #868f8f;
$darkFour: #15161c;

$bgTile: #1a1d21;
$bgBody: #acacac;
$bgFooter: #001111;
// $bgHeader: #222529;
$bgHeader: #0b0c0d;
$popupBgColor: #323232;
$warning: #f6ac3c;
$success: #12664f;
$zicopsPink: #e782a6;
$zicopsSky: #41a9ef;
$skeletonColor: dimgray;

$headerHeight: 70px;
$footerHeight: 100px;

$cardTileRatio: 1.75;

$courseTitle: 22px;
$courseTitleSmall: 18px;

// course card colors based on types
$selfPacedBorder: $primary;
$testSeriesBorder: $zicopsPink;
$classroomBorder: $warning;
$eventBorder: $zicopsSky;

:export {
  primary: $primary;
  secondary: $secondary;

  accent: $accent;
  bgContent: $bgContent;
  error: $error;
  white: $white;
  neutralWhite: $neutralWhite;
  secondaryWhite: $secondaryWhite;
  tertiaryWhite: $tertiaryWhite;

  black: $black;
  secondaryBlack: $secondaryBlack;
  tertiaryBlack: $tertiaryBlack;
  header: $header;
  darkOne: $darkOne;
  darkTwo: $darkTwo;
  darkThree: $darkThree;
  darkFour: $darkFour;
  bgTile: $bgTile;
  bgBody: $bgBody;
  bgFooter: $bgFooter;
  bgHeader: $bgHeader;
  popupBgColor: $popupBgColor;
  warning: $warning;
  success: $success;
  skeletonColor: $skeletonColor;

  headerHeight: $headerHeight;
  footerHeight: $footerHeight;
  cardTileRatio: $cardTileRatio;
  courseTitle: $courseTitle;
  courseTitleSmall: $courseTitleSmall;

  selfPacedBorder: $selfPacedBorder;
  testSeriesBorder: $testSeriesBorder;
  classroomBorder: $classroomBorder;
  eventBorder: $eventBorder;
}
// function for generating transparent color from base colors
@function getLowOpacityColor($colorInHex, $opacityInHex) {
  @return rgba($colorInHex, $opacityInHex);
}

// mixins
@mixin cut-corners($left-top, $right-top: 0px, $right-bottom: 0px, $left-bottom: 0px) {
  clip-path: polygon(
    $left-top 0%,
    calc(100% - #{$right-top}) 0%,
    100% $right-top,
    100% calc(100% - #{$right-bottom}),
    calc(100% - #{$right-bottom}) 100%,
    $left-bottom 100%,
    0% calc(100% - #{$left-bottom}),
    0% $left-top
  );
}

// to make background semi transparent
@mixin transparentBackground($bgColor: $bgContent, $opacity: 0.5) {
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background: $bgColor;

    z-index: -1;

    opacity: $opacity;
  }
}

// input states
@mixin inputStylesFor($state: 'hasValue') {
  @if $state == 'hasValue' {
    color: $white;
    // border: 2px solid $primary;
    border-color: $primary;
    background-color: $darkTwo;
  }

  @if $state == 'error' {
    // border: 2px solid $error !important;
    border-color: $error !important;
    animation: headShake 1s ease-out;
  }
  @if $state == 'disabled' {
    // border: 2px solid $darkThree;
    border-color: $darkThree;
    cursor: not-allowed !important;
  }

  @if $state == 'focus' {
    // border: 2px solid $primary;
    border-color: $primary;
    box-shadow: 0px 0px 10px 0px $primary;
    outline: 0;
    color: $white;
  }
}

@keyframes headShake {
  0% {
    -webkit-transform: translateX(0);
    transform: translateX(0);
  }

  6.5% {
    -webkit-transform: translateX(-6px) rotateY(-9deg);
    transform: translateX(-6px) rotateY(-9deg);
  }

  18.5% {
    -webkit-transform: translateX(5px) rotateY(7deg);
    transform: translateX(5px) rotateY(7deg);
  }

  31.5% {
    -webkit-transform: translateX(-3px) rotateY(-5deg);
    transform: translateX(-3px) rotateY(-5deg);
  }

  43.5% {
    -webkit-transform: translateX(2px) rotateY(3deg);
    transform: translateX(2px) rotateY(3deg);
  }

  50% {
    -webkit-transform: translateX(0);
    transform: translateX(0);
  }
}

.headShake {
  // -webkit-animation-timing-function: ease-in-out;
  // animation-timing-function: ease-in-out;
  // -webkit-animation-name: headShake;
  // animation-name: headShake;
  animation: headShake 1s ease-out;
}
// red corner count at the end

@mixin showRedCountAtCorner($size: 20px, $fontSize: 12px, $bgColor: red, $color: $white) {
  position: relative;

  &::before {
    content: attr(data-count);

    height: $size;
    width: $size;

    display: flex;
    justify-content: center;
    align-items: center;

    background-color: $bgColor;
    border-radius: 50%;

    font-size: $fontSize;
    color: $color;

    position: absolute;
    top: 0;
    right: 0;
    transform: translate(50%, -50%);
  }
}

@mixin loader($size: 20px, $color: #3498db, $bgColor: transparent) {
  background: $bgColor;
  border: 3px solid $color; /* Light grey */
  border-top: 3px solid transparent; /* Blue */
  border-radius: 50%;

  width: $size;
  height: $size;
  animation: spin 2s linear infinite;

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
}

.courseColor {
  color: $white;
}

.examColor {
  color: $warning;
}
